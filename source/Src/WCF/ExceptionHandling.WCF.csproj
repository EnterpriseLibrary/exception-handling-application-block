<Project Sdk="Microsoft.NET.Sdk">
  <Import Project="..\..\..\package.props" />

  <PropertyGroup>
    <TargetFrameworks>net46;net47</TargetFrameworks>

    <AssemblyVersion>$(MajorVersion).0.0.0</AssemblyVersion>
    <FileVersion>$(Version).$(Revision)</FileVersion>
  </PropertyGroup>

  <PropertyGroup>
    <AssemblyName>$(PreAssemblyName).ExceptionHandling.WCF</AssemblyName>
    <RootNamespace>$(PreAssemblyName).ExceptionHandling.WCF</RootNamespace>
    <AssemblyTitle>Enterprise Library Exception Handling WCF Provider</AssemblyTitle>

    <PackageId>$(BypassPrePackageName).$(PrePackageName).ExceptionHandling.WCF$(PostPackageName)</PackageId>
    <Title>Enterprise Library Exception Handling WCF Provider</Title>
    <Description>Enterprise Library Exception Handling WCF Provider</Description>
    <Summary>Enterprise Library Exception Handling WCF Provider</Summary>
    <PackageTags>entlib entlib6 Enterprise Library exception ehab error management eab logging wcf lab handler LOB futures OSS</PackageTags>

    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>..\..\EnterpriseLibrary.snk</AssemblyOriginatorKeyFile>
    <DelaySign>false</DelaySign>
  </PropertyGroup>

  <PropertyGroup>
    <EntLibCommon>..\..\..\..\Common\source\Src\Common\Common.csproj</EntLibCommon>
    <EntLibLogging>..\..\..\..\Logging\source\Src\Logging\Logging.csproj</EntLibLogging>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="$(EntLibCommon)" Condition="Exists('$(EntLibCommon)') AND '$(EntLibDependencyType)' == 'Project'" />
    <PackageReference Include="$(PrePackageName).Common$(PostPackageName)" Version="$(EntLibCommonVersion)" Condition="!Exists('$(EntLibCommon)') OR '$(EntLibDependencyType)' == 'Package'" />

    <ProjectReference Include="$(EntLibLogging)" Condition="Exists('$(EntLibLogging)') AND '$(EntLibDependencyType)' == 'Project'" />
    <PackageReference Include="$(PrePackageName).Logging$(PostPackageName)" Version="$(EntLibLoggingVersion)" Condition="!Exists('$(EntLibLogging)') OR '$(EntLibDependencyType)' == 'Package'" />

    <ProjectReference Include="..\ExceptionHandling\ExceptionHandling.csproj" />
  </ItemGroup>

  <ItemGroup Condition="$(TargetFramework.StartsWith('netstandard')) OR $(TargetFramework.StartsWith('netcoreapp'))">
    
  </ItemGroup>

  <ItemGroup Condition="!$(TargetFramework.StartsWith('netstandard')) AND !$(TargetFramework.StartsWith('netcoreapp'))">
    <Reference Include="System.Configuration" />
    <Reference Include="System.Configuration.Install" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.ServiceModel" />
    <Reference Include="System.Web.Services" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="..\..\GlobalAssemblyInfo.cs">
      <Link>GlobalAssemblyInfo.cs</Link>
    </Compile>

    <None Include="..\..\ExceptionHandling.licenseheader">
      <Link>ExceptionHandling.licenseheader</Link>
    </None>

    <Compile Update="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>

    <Compile Update="Configuration\DesignResources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>DesignResources.resx</DependentUpon>
    </Compile>

    <EmbeddedResource Update="Configuration\DesignResources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>DesignResources.Designer.cs</LastGenOutput>
      <SubType>Designer</SubType>
    </EmbeddedResource>

    <EmbeddedResource Update="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
      <SubType>Designer</SubType>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
    <Content Include="..\..\NuGet\Readme.txt">
      <Pack>true</Pack>
      <Visible>False</Visible>
      <PackagePath></PackagePath>
    </Content>

    <Content Include="..\..\NuGet\tools\SharedCommon\install.ps1">
      <Pack>true</Pack>
      <Visible>False</Visible>
      <PackagePath>tools</PackagePath>
    </Content>

    <Content Include="..\..\NuGet\tools\SharedCommon\Utils.psm1">
      <Pack>true</Pack>
      <Visible>False</Visible>
      <PackagePath>tools</PackagePath>
    </Content>
  </ItemGroup>

  <ItemGroup Condition="$(TargetFramework.StartsWith('netstandard')) OR $(TargetFramework.StartsWith('netcoreapp'))">

  </ItemGroup>

  <ItemGroup Condition="!$(TargetFramework.StartsWith('netstandard')) AND !$(TargetFramework.StartsWith('netcoreapp'))">

  </ItemGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>$(SolutionDir)..\bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE;WMINET10</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <RunCodeAnalysis>false</RunCodeAnalysis>
    <DocumentationFile>$(SolutionDir)..\bin\Debug\$(AssemblyName).xml</DocumentationFile>
    <Prefer32Bit>false</Prefer32Bit>
    <CodeAnalysisRuleSet>..\..\EnterpriseLibrary.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <DebugType>full</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>$(SolutionDir)..\bin\Release\</OutputPath>
    <DefineConstants>TRACE;WMINET10</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <DocumentationFile>$(SolutionDir)..\bin\Release\$(AssemblyName).xml</DocumentationFile>
    <DebugSymbols>true</DebugSymbols>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
</Project>